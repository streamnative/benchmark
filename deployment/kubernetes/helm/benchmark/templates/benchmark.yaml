#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: v1
kind: Pod
metadata:
  name: {{ .Release.Name }}-driver
  labels:
    app: {{ .Release.Name }}
    role: driver
spec:
  containers:
    - name: {{ .Release.Name }}-driver
      imagePullPolicy: {{ .Values.imagePullPolicy }}
      image: {{ .Values.image }}
      resources:
        limits:
          memory: {{ .Values.driverMemoryLimit }}
        requests:
          memory: {{ .Values.driverMemoryRequest }}
      env:
        - name: NUM_WORKERS
          value: "{{ .Values.numWorkers }}"
        - name: WORKERS
          value: '{{ template "workers" .Values }}'
        - name: HEAP_OPTS
          value: '-Xms4G -Xmx4G'
      command: ["sh", "-c"]
      args:
        - >
#          webServiceUrl=$(grep -oP 'webServiceUrl=\K[^ ]+' /mnt/toolset/config/client.conf)
#          brokerServiceURL=$(grep -oP 'brokerServiceURL=\K[^ ]+' /mnt/toolset/config/client.conf)
#          authPlugin=$(grep -oP 'authPlugin=\K[^ ]+' /mnt/toolset/config/client.conf)
#          authParams=$(grep -oP 'authParams=\K[^ ]+' /mnt/toolset/config/client.conf)
#          sed -i "s|serviceUrl: pulsar://localhost:6650|serviceUrl: $brokerServiceURL|" {{ .Values.driver }}
#          sed -i "s|httpUrl: http://localhost:8080|httpUrl: $webServiceUrl|" {{ .Values.driver }}
#          sed -i "s|plugin:|plugin: $authPlugin|" {{ .Values.driver }}
#          sed -i "s|data:|data: $authParams|" {{ .Values.driver }}
          echo "bin/benchmark --drivers {{ .Values.driver }} --workers $WORKERS {{ .Values.workload }}" > example-run.sh &&
          tail -f /dev/null
      volumeMounts:
        - mountPath: /mnt/toolset/config
          name: config
  volumes:
    - name: config
      secret:
        defaultMode: 420
        secretName: {{ .Values.secretName }}
